- breadcrumb_title "General Settings"
- page_title "General"
- @content_class = "limit-container-width" unless fluid_layout
- expanded = Rails.env.test?

- content_for :page_specific_javascripts do
  = webpack_bundle_tag('common_vue')
  = webpack_bundle_tag('service_desk')

.project-edit-container
  %section.settings.general-settings.no-animate{ class: ('expanded' if expanded) }
    .settings-header
      %h4
        General project settings
      %button.btn.js-settings-toggle
        = expanded ? 'Collapse' : 'Expand'
      %p
        Update your project name, description, avatar, and other general settings.
    .settings-content
      .project-edit-errors
      = form_for [@project.namespace.becomes(Namespace), @project], remote: true, html: { multipart: true, class: "edit-project" }, authenticity_token: true do |f|
        %fieldset
          .row
            .form-group.col-md-9
              = f.label :name, class: 'label-light', for: 'project_name_edit' do
                Project name
              = f.text_field :name, class: "form-control", id: "project_name_edit"

            .form-group.col-md-3
              = f.label :id, class: 'label-light' do
                Project ID
              = f.text_field :id, class: 'form-control', readonly: true

          .form-group
            = f.label :description, class: 'label-light' do
              Project description
              %span.light (optional)
            = f.text_area :description, class: "form-control", rows: 3, maxlength: 250

          - unless @project.empty_repo?
            .form-group
              = f.label :default_branch, "Default Branch", class: 'label-light'
              = f.select(:default_branch, @project.repository.branch_names, {}, {class: 'select2 select-wide'})

        = render 'shared/repository_size_limit_setting', form: f, type: :project

        .form-group
          = f.label :tag_list, "Tags", class: 'label-light'
          = f.text_field :tag_list, value: @project.tag_list.sort.join(', '), maxlength: 2000, class: "form-control"
          %p.help-block Separate tags with commas.
          %h5.prepend-top-0
            Project avatar
          .form-group
            - if @project.avatar?
              .avatar-container.s160
                = project_icon(@project.full_path, alt: '', class: 'avatar project-avatar s160')
            %p.light
              - if @project.avatar_in_git
                Project avatar in repository: #{ @project.avatar_in_git }
            %a.choose-btn.btn.js-choose-project-avatar-button
              Browse file...
            %span.file_name.prepend-left-default.js-avatar-filename No file chosen
            = f.file_field :avatar, class: "js-project-avatar-input hidden"
            .help-block The maximum file size allowed is 200KB.
            - if @project.avatar?
              %hr
              = link_to 'Remove avatar', project_avatar_path(@project), data: { confirm: "Project avatar will be removed. Are you sure?"}, method: :delete, class: "btn btn-remove btn-sm remove-avatar"
        = f.submit 'Save changes', class: "btn btn-save"

  %section.settings.sharing-permissions.no-animate{ class: ('expanded' if expanded) }
    .settings-header
      %h4
        Permissions
      %button.btn.js-settings-toggle
        = expanded ? 'Collapse' : 'Expand'
      %p
        Enable or disable certain project features and choose access levels.
    .settings-content
      = form_for [@project.namespace.becomes(Namespace), @project], remote: true, html: { multipart: true, class: "sharing-permissions-form" }, authenticity_token: true do |f|
        %script.js-project-permissions-form-data{ type: "application/json" }= project_permissions_panel_data(@project)
        .js-project-permissions-form
        = f.submit 'Save changes', class: "btn btn-save"

  = render 'projects/ee/issues_settings'

  %section.settings.merge-requests-feature.no-animate{ class: [('expanded' if expanded), ('hidden' if @project.project_feature.send(:merge_requests_access_level) == 0)] }
    .settings-header
      %h4
        Merge request settings
      %button.btn.js-settings-toggle
        = expanded ? 'Collapse' : 'Expand'
      %p
        Customize your merge request restrictions.
    .settings-content
      = render 'shared/promotions/promote_mr_features'

      = form_for [@project.namespace.becomes(Namespace), @project], remote: true, html: { multipart: true, class: "merge-request-settings-form" }, authenticity_token: true do |f|
        = render 'projects/ee/merge_request_settings', form: f
        = f.submit 'Save changes', class: "btn btn-save"

  = render 'projects/ee/service_desk_settings'

  = render 'export', project: @project

  %section.settings.advanced-settings.no-animate{ class: ('expanded' if expanded) }
    .settings-header
      %h4
        Advanced settings
      %button.btn.js-settings-toggle
        = expanded ? 'Collapse' : 'Expand'
      %p
        Perform advanced options such as housekeeping, archiving, renaming, transferring, or removing your project.
    .settings-content
      .sub-section
        %h4 Housekeeping
        %p
          Runs a number of housekeeping tasks within the current repository, such as compressing file revisions and removing unreachable objects.
        = link_to 'Run housekeeping', housekeeping_project_path(@project),
            method: :post, class: "btn btn-default"
      - if can? current_user, :archive_project, @project
        .sub-section
          %h4.warning-title
            - if @project.archived?
              Unarchive project
            - else
              Archive project
          - if @project.archived?
            %p
              Unarchiving the project will mark its repository as active. The project can be committed to.
              %strong Once active this project shows up in the search and on the dashboard.
            = link_to 'Unarchive project', unarchive_project_path(@project),
                data: { confirm: "Are you sure that you want to unarchive this project?\nWhen this project is unarchived it is active and can be committed to again." },
                method: :post, class: "btn btn-success"
          - else
            %p
              Archiving the project will mark its repository as read-only. It is hidden from the dashboard and doesn't show up in searches.
              %strong Archived projects cannot be committed to!
            = link_to 'Archive project', archive_project_path(@project),
                data: { confirm: "Are you sure that you want to archive this project?\nAn archived project cannot be committed to." },
                method: :post, class: "btn btn-warning"
      .sub-section.rename-respository
        %h4.warning-title
          Rename repository
        = render 'projects/errors'
        = form_for([@project.namespace.becomes(Namespace), @project]) do |f|
          .form-group.project_name_holder
            = f.label :name, class: 'label-light' do
              Project name
            .form-group
              = f.text_field :name, class: "form-control"
          .form-group
            = f.label :path, class: 'label-light' do
              %span Path
            .form-group
              .input-group
                .input-group-addon
                  #{URI.join(root_url, @project.namespace.full_path)}/
                = f.text_field :path, class: 'form-control'
            %ul
              %li Be careful. Renaming a project's repository can have unintended side effects.
              %li You will need to update your local repositories to point to the new location.
              - if @project.deployment_services.any?
                %li Your deployment services will be broken, you will need to manually fix the services after renaming.
          = f.submit 'Rename project', class: "btn btn-warning"
      - if can?(current_user, :change_namespace, @project)
        .sub-section
          %h4.danger-title
            Transfer project
          = form_for([@project.namespace.becomes(Namespace), @project], url: transfer_project_path(@project), method: :put, remote: true, html: { class: 'js-project-transfer-form' } ) do |f|
            .form-group
              = label_tag :new_namespace_id, nil, class: 'label-light' do
                %span  Select a new namespace
              .form-group
                = select_tag :new_namespace_id, namespaces_options(nil), include_blank: true, class: 'select2'
              %ul
                %li Be careful. Changing the project's namespace can have unintended side effects.
                %li You can only transfer the project to namespaces you manage.
                %li You will need to update your local repositories to point to the new location.
                %li Project visibility level will be changed to match namespace rules when transferring to a group.
            = f.submit 'Transfer project', class: "btn btn-remove js-confirm-danger", data: { "confirm-danger-message" => transfer_project_message(@project) }
      - if @project.forked? && can?(current_user, :remove_fork_project, @project)
        .sub-section
          %h4.danger-title
            Remove fork relationship
          %p
            This will remove the fork relationship to source project
            = succeed "." do
              - if @project.fork_source
                = link_to(fork_source_name(@project), project_path(@project.fork_source))
              - else
                = fork_source_name(@project)
          = form_for([@project.namespace.becomes(Namespace), @project], url: remove_fork_project_path(@project), method: :delete, remote: true, html: { class: 'transfer-project' }) do |f|
            %p
              %strong Once removed, the fork relationship cannot be restored and you will no longer be able to send merge requests to the source.
            = button_to 'Remove fork relationship', '#', class: "btn btn-remove js-confirm-danger", data: { "confirm-danger-message" => remove_fork_project_message(@project) }
      - if can?(current_user, :remove_project, @project)
        .sub-section
          %h4.danger-title
            Remove project
          %p
            Removing the project will delete its repository and all related resources including issues, merge requests etc.
          = form_tag(project_path(@project), method: :delete) do
            %p
              %strong Removed projects cannot be restored!
            = button_to 'Remove project', '#', class: "btn btn-remove js-confirm-danger", data: { "confirm-danger-message" => remove_project_message(@project) }

.save-project-loader.hide
  .center
    %h2
      %i.fa.fa-spinner.fa-spin
      Saving project.
    %p Please wait a moment, this page will automatically refresh when ready.

= render 'shared/confirm_modal', phrase: @project.path
